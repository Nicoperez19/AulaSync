{
  "version": 3,
  "sources": ["../../@alpinejs/mask/dist/module.esm.js"],
  "sourcesContent": ["// packages/mask/src/index.js\r\nfunction src_default(Alpine) {\r\n  Alpine.directive(\"mask\", (el, { value, expression }, { effect, evaluateLater, cleanup }) => {\r\n    let templateFn = () => expression;\r\n    let lastInputValue = \"\";\r\n    queueMicrotask(() => {\r\n      if ([\"function\", \"dynamic\"].includes(value)) {\r\n        let evaluator = evaluateLater(expression);\r\n        effect(() => {\r\n          templateFn = (input) => {\r\n            let result;\r\n            Alpine.dontAutoEvaluateFunctions(() => {\r\n              evaluator((value2) => {\r\n                result = typeof value2 === \"function\" ? value2(input) : value2;\r\n              }, { scope: {\r\n                // These are \"magics\" we'll make available to the x-mask:function:\r\n                \"$input\": input,\r\n                \"$money\": formatMoney.bind({ el })\r\n              } });\r\n            });\r\n            return result;\r\n          };\r\n          processInputValue(el, false);\r\n        });\r\n      } else {\r\n        processInputValue(el, false);\r\n      }\r\n      if (el._x_model) {\r\n        if (el._x_model.get() === el.value)\r\n          return;\r\n        if (el._x_model.get() === null && el.value === \"\")\r\n          return;\r\n        el._x_model.set(el.value);\r\n      }\r\n    });\r\n    const controller = new AbortController();\r\n    cleanup(() => {\r\n      controller.abort();\r\n    });\r\n    el.addEventListener(\"input\", () => processInputValue(el), {\r\n      signal: controller.signal,\r\n      // Setting this as a capture phase listener to ensure it runs\r\n      // before wire:model or x-model added as a latent binding...\r\n      capture: true\r\n    });\r\n    el.addEventListener(\"blur\", () => processInputValue(el, false), { signal: controller.signal });\r\n    function processInputValue(el2, shouldRestoreCursor = true) {\r\n      let input = el2.value;\r\n      let template = templateFn(input);\r\n      if (!template || template === \"false\")\r\n        return false;\r\n      if (lastInputValue.length - el2.value.length === 1) {\r\n        return lastInputValue = el2.value;\r\n      }\r\n      let setInput = () => {\r\n        lastInputValue = el2.value = formatInput(input, template);\r\n      };\r\n      if (shouldRestoreCursor) {\r\n        restoreCursorPosition(el2, template, () => {\r\n          setInput();\r\n        });\r\n      } else {\r\n        setInput();\r\n      }\r\n    }\r\n    function formatInput(input, template) {\r\n      if (input === \"\")\r\n        return \"\";\r\n      let strippedDownInput = stripDown(template, input);\r\n      let rebuiltInput = buildUp(template, strippedDownInput);\r\n      return rebuiltInput;\r\n    }\r\n  }).before(\"model\");\r\n}\r\nfunction restoreCursorPosition(el, template, callback) {\r\n  let cursorPosition = el.selectionStart;\r\n  let unformattedValue = el.value;\r\n  callback();\r\n  let beforeLeftOfCursorBeforeFormatting = unformattedValue.slice(0, cursorPosition);\r\n  let newPosition = buildUp(\r\n    template,\r\n    stripDown(\r\n      template,\r\n      beforeLeftOfCursorBeforeFormatting\r\n    )\r\n  ).length;\r\n  el.setSelectionRange(newPosition, newPosition);\r\n}\r\nfunction stripDown(template, input) {\r\n  let inputToBeStripped = input;\r\n  let output = \"\";\r\n  let regexes = {\r\n    \"9\": /[0-9]/,\r\n    \"a\": /[a-zA-Z]/,\r\n    \"*\": /[a-zA-Z0-9]/\r\n  };\r\n  let wildcardTemplate = \"\";\r\n  for (let i = 0; i < template.length; i++) {\r\n    if ([\"9\", \"a\", \"*\"].includes(template[i])) {\r\n      wildcardTemplate += template[i];\r\n      continue;\r\n    }\r\n    for (let j = 0; j < inputToBeStripped.length; j++) {\r\n      if (inputToBeStripped[j] === template[i]) {\r\n        inputToBeStripped = inputToBeStripped.slice(0, j) + inputToBeStripped.slice(j + 1);\r\n        break;\r\n      }\r\n    }\r\n  }\r\n  for (let i = 0; i < wildcardTemplate.length; i++) {\r\n    let found = false;\r\n    for (let j = 0; j < inputToBeStripped.length; j++) {\r\n      if (regexes[wildcardTemplate[i]].test(inputToBeStripped[j])) {\r\n        output += inputToBeStripped[j];\r\n        inputToBeStripped = inputToBeStripped.slice(0, j) + inputToBeStripped.slice(j + 1);\r\n        found = true;\r\n        break;\r\n      }\r\n    }\r\n    if (!found)\r\n      break;\r\n  }\r\n  return output;\r\n}\r\nfunction buildUp(template, input) {\r\n  let clean = Array.from(input);\r\n  let output = \"\";\r\n  for (let i = 0; i < template.length; i++) {\r\n    if (![\"9\", \"a\", \"*\"].includes(template[i])) {\r\n      output += template[i];\r\n      continue;\r\n    }\r\n    if (clean.length === 0)\r\n      break;\r\n    output += clean.shift();\r\n  }\r\n  return output;\r\n}\r\nfunction formatMoney(input, delimiter = \".\", thousands, precision = 2) {\r\n  if (input === \"-\")\r\n    return \"-\";\r\n  if (/^\\D+$/.test(input))\r\n    return \"9\";\r\n  if (thousands === null || thousands === void 0) {\r\n    thousands = delimiter === \",\" ? \".\" : \",\";\r\n  }\r\n  let addThousands = (input2, thousands2) => {\r\n    let output = \"\";\r\n    let counter = 0;\r\n    for (let i = input2.length - 1; i >= 0; i--) {\r\n      if (input2[i] === thousands2)\r\n        continue;\r\n      if (counter === 3) {\r\n        output = input2[i] + thousands2 + output;\r\n        counter = 0;\r\n      } else {\r\n        output = input2[i] + output;\r\n      }\r\n      counter++;\r\n    }\r\n    return output;\r\n  };\r\n  let minus = input.startsWith(\"-\") ? \"-\" : \"\";\r\n  let strippedInput = input.replaceAll(new RegExp(`[^0-9\\\\${delimiter}]`, \"g\"), \"\");\r\n  let template = Array.from({ length: strippedInput.split(delimiter)[0].length }).fill(\"9\").join(\"\");\r\n  template = `${minus}${addThousands(template, thousands)}`;\r\n  if (precision > 0 && input.includes(delimiter))\r\n    template += `${delimiter}` + \"9\".repeat(precision);\r\n  queueMicrotask(() => {\r\n    if (this.el.value.endsWith(delimiter))\r\n      return;\r\n    if (this.el.value[this.el.selectionStart - 1] === delimiter) {\r\n      this.el.setSelectionRange(this.el.selectionStart - 1, this.el.selectionStart - 1);\r\n    }\r\n  });\r\n  return template;\r\n}\r\n\r\n// packages/mask/builds/module.js\r\nvar module_default = src_default;\r\nexport {\r\n  module_default as default,\r\n  src_default as mask,\r\n  stripDown\r\n};\r\n"],
  "mappings": "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",
  "names": []
}
